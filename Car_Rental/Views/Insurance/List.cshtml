@model IEnumerable<Car_Rental.Models.Entities.Insurance>

@{
    ViewData["Title"] = "All Insurances";
}

@{
    Layout = "_AdminLayout"; // Ensure it uses the AdminLayout
}

<style>
    body {
        overflow: hidden;
    }

    .row-full {
        display: flex;
        height: calc(100vh - 90px);
        padding: 15px;
        gap: 15px;
        box-sizing: border-box;
    }

    .col-left {
        flex: 0 0 65%;
        display: flex;
        flex-direction: column;
        border: 1px solid #dee2e6;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 12px rgba(0,0,0,0.05);
    }

    .left-header,
    .left-filter {
        flex: 0 0 auto;
        padding: 15px;
        border-bottom: 1px solid #dee2e6;
    }

    .left-filter {
        border-bottom: none;
    }

    .table-container {
        flex: 1 1 auto;
        overflow-y: auto;
    }

        .table-container table {
            width: 100%;
            border-collapse: collapse;
        }

        .table-container thead {
            position: sticky;
            top: 0;
            background-color: #343a40;
            z-index: 10;
        }

    .insurance-row {
        cursor: pointer;
        transition: background-color 0.2s ease;
    }

        .insurance-row:hover {
            background-color: #f1f3f5;
        }

        .insurance-row.active {
            background-color: #d0ebff !important;
            font-weight: 500;
        }

    .col-right {
        flex: 0 0 35%;
        padding: 25px;
        overflow-y: auto;
        background-color: #ffffff;
        border: 1px solid #dee2e6;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.05);
    }
</style>

<div class="row-full">
    <!-- Left -->
    <div class="col-left">
        <div class="left-header d-flex justify-content-between align-items-center">
            <h2 class="fw-bold text-primary mb-0">@ViewData["Title"]</h2>
            <a asp-action="Add" class="btn btn-primary fw-bold">
                <i class="bi bi-plus-circle me-1"></i> Add Insurance
            </a>
        </div>

        <div class="left-filter row g-2 align-items-center">
            <div class="col-md-12">
                <input type="text" id="searchBox" class="form-control" placeholder="Search by Name..." />
            </div>
        </div>

        <div class="table-container">
            <table class="table table-hover align-middle mb-0">
                <thead class="table-dark">
                    <tr>
                        <th class="ps-3">Name</th>
                        <th>Coverage Percentage</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        foreach (var insurance in Model)
                        {
                            <tr class="insurance-row" data-insurance-id="@insurance.InsuranceID" data-name="@insurance.Name">
                                <td class="ps-3">
                                    <div class="fw-bold">@insurance.Name</div>
                                </td>
                                <td>
                                    <span class="badge bg-info">@insurance.CoveragePercentage%</span>
                                </td>
                                <td>
                                    <small class="text-muted">@(insurance.Description ?? "N/A")</small>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="3" class="text-center p-5 text-muted">No insurance policies found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Right -->
    <div class="col-right" id="detailsPane">
        <div class="details-content text-center pt-5">
            <i class="bi bi-shield-check" style="font-size: 5rem; color: #ccc;"></i>
            <h5 class="mt-3 text-muted">No Insurance Selected</h5>
            <p>Select an insurance policy from the list to view full details.</p>
        </div>
    </div>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">Are you sure you want to delete this insurance policy?</div>
            <div class="modal-footer">
                <form id="deleteForm" method="post">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Yes, Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const searchBox = document.getElementById("searchBox");
            const detailsPane = document.getElementById("detailsPane");
            const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            const deleteForm = document.getElementById('deleteForm');

            // Insurance row click
            document.querySelectorAll(".insurance-row").forEach(row => {
                row.addEventListener("click", function () {
                    const insuranceId = this.dataset.insuranceId;
                    const isActive = this.classList.contains("active");
                    document.querySelectorAll(".insurance-row").forEach(r => r.classList.remove("active"));

                    if (isActive) {
                        detailsPane.innerHTML = `<div class="details-content text-center pt-5">
                            <i class="bi bi-shield-check" style="font-size: 5rem; color: #ccc;"></i>
                            <h5 class="mt-3 text-muted">No Insurance Selected</h5>
                            <p>Select an insurance policy from the list to view full details.</p>
                        </div>`;
                    } else {
                        this.classList.add("active");

                        // NOTE: You need to create this endpoint in your InsuranceController
                        fetch(`/Insurance/GetInsuranceDetails/${insuranceId}`)
                            .then(res => {
                                if (!res.ok) {
                                    throw new Error('Network response was not ok');
                                }
                                return res.json();
                            })
                            .then(insurance => {
                                detailsPane.innerHTML = `
                                    <div class="details-content">
                                        <h4 class="mb-3">${insurance.name}</h4>
                                        <ul class="list-group list-group-flush">
                                            <li class="list-group-item"><strong>Coverage:</strong> <span class="fw-bold fs-5 text-success">${insurance.coveragePercentage}%</span></li>
                                            <li class="list-group-item"><strong>Description:</strong> ${insurance.description || 'N/A'}</li>
                                        </ul>
                                        <div class="mt-4">
                                            <a href="/Insurance/Edit/${insurance.insuranceID}" class="btn btn-warning fw-bold">Edit</a>
                                            <button type="button" class="btn btn-outline-danger fw-bold delete-btn" data-insurance-id="${insurance.insuranceID}">Delete</button>
                                        </div>
                                    </div>`;
                            })
                            .catch(error => {
                                console.error('Error fetching insurance details:', error);
                                detailsPane.innerHTML = `<div class="details-content text-center pt-5 text-danger">
                                    <i class="bi bi-exclamation-triangle" style="font-size: 5rem;"></i>
                                    <h5 class="mt-3">Error</h5>
                                    <p>Could not load insurance details.</p>
                                </div>`;
                            });
                    }
                });
            });

            // Delete click event listener (delegated to the document)
            document.addEventListener("click", function (e) {
                if (e.target && e.target.classList.contains("delete-btn")) {
                    const insuranceId = e.target.getAttribute("data-insurance-id");
                    // NOTE: Ensure your controller's Delete action uses POST
                    deleteForm.action = `/Insurance/Delete/${insuranceId}`;
                    deleteModal.show();
                }
            });

            // Filter function
            function filterInsurances() {
                const search = searchBox.value.toLowerCase();

                document.querySelectorAll(".insurance-row").forEach(row => {
                    const insuranceName = row.dataset.name.toLowerCase();
                    const matchSearch = insuranceName.includes(search);
                    row.style.display = matchSearch ? "" : "none";
                });
            }

            searchBox.addEventListener("keyup", filterInsurances);
        });

    </script>
}