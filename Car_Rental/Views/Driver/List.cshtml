@model IEnumerable<Car_Rental.Models.Entities.Driver>

@{
    ViewData["Title"] = "All Drivers";
}

@{
    Layout = "_AdminLayout"; // Ensure it uses the LoginLayout
}


<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/list.css" asp-append-version="true" />

<div class="row-full">
    <!-- Left Column -->
    <div class="col-left">
        <!-- Header -->
        <div class="left-header d-flex justify-content-between align-items-center">
            <h2 class="fw-bold text-primary mb-0">@ViewData["Title"]</h2>
            <a asp-action="Add" class="btn btn-primary fw-bold">
                <i class="bi bi-plus-circle me-1"></i> Add Driver
            </a>
        </div>

        <!-- Stats -->
        <div class="left-stats stats-boxes">
            <div class="stats-box stats-total" id="totalDriverBox">Total Drivers: 0</div>
            <div class="stats-box stats-available" id="availableDriversBox">Available: 0</div>
            <div class="stats-box stats-unavailable" id="unavailableDriversBox">Unavailable: 0</div>
        </div>

        <!-- Search + Status Filter -->
        <div class="left-filter row g-2 align-items-center">
            <div class="col-md-7">
                <input type="text" id="searchBox" class="form-control" placeholder="Search by Name, NIC, License..." />
            </div>
            <div class="col-md-5">
                <select id="statusFilter" class="form-select">
                    <option value="">All Status</option>
                    <option value="Available">Available</option>
                    <option value="Unavailable">Unavailable</option>
                </select>
            </div>
        </div>

        <!-- Driver Table -->
        <div class="table-container">
            <table class="table table-hover align-middle mb-0">
                <thead class="table-dark">
                    <tr>
                        <th class="ps-4">Photo</th>
                        <th>Name</th>
                        <th>NIC</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        foreach (var driver in Model)
                        {
                            <tr class="driver-row" data-driver-id="@driver.DriverID">
                                <td class="ps-3">
                                    <img src="@(string.IsNullOrEmpty(driver.PhotoUrl) ? "/images/default-user.png" : driver.PhotoUrl)" class="car-thumb" />
                                </td>
                                <td>@driver.FullName</td>
                                <td>@driver.NIC</td>
                                <td>
                                    @if (driver.Status == Car_Rental.Enum.DriverStatus.Available)
                                    {
                                        <span class="badge bg-success">Available</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Unavailable</span>
                                    }
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr><td colspan="4" class="text-center p-5 text-muted">No drivers found.</td></tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Right Column -->
    <div class="col-right" id="detailsPane">
        <div class="details-content text-center pt-5">
            <i class="bi bi-person-badge" style="font-size: 5rem; color: #ccc;"></i>
            <h5 class="mt-3 text-muted">No Driver Selected</h5>
            <p>Select a driver from the list to view details.</p>
        </div>
    </div>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">Are you sure you want to delete this driver?</div>
            <div class="modal-footer">
                <form id="deleteForm" method="post">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Yes, Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const rows = document.querySelectorAll(".driver-row");
            const detailsPane = document.getElementById("detailsPane");
            const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            const deleteForm = document.getElementById('deleteForm');

            // ---------------- Driver Stats ----------------
            const totalDrivers = @Model.Count();
            const availableDrivers = @Model.Count(d => d.Status == Car_Rental.Enum.DriverStatus.Available);
            const unavailableDrivers = totalDrivers - availableDrivers;

            document.getElementById("totalDriverBox").innerText = `Total Drivers: ${totalDrivers}`;
            document.getElementById("availableDriversBox").innerText = `Available: ${availableDrivers}`;
            document.getElementById("unavailableDriversBox").innerText = `Unavailable: ${unavailableDrivers}`;

            // ---------------- Row Click ----------------
            rows.forEach(row => {
                row.addEventListener("click", function () {
                    const driverId = this.dataset.driverId;
                    const isActive = this.classList.contains("active");

                    rows.forEach(r => r.classList.remove("active"));

                    if (isActive) {
                        // Reset details pane
                        detailsPane.innerHTML = `<div class="details-content text-center pt-5">
                            <i class="bi bi-person-badge" style="font-size:5rem;color:#ccc;"></i>
                            <h5 class="mt-3 text-muted">No Driver Selected</h5>
                            <p>Select a driver from the list to view details.</p>
                        </div>`;
                    } else {
                        this.classList.add("active");
                        fetch(`/Driver/GetDriverDetails/${driverId}`)
                            .then(res => res.json())
                            .then(driver => {
                                detailsPane.innerHTML = `
                                    <div class="details-content">
                                        <img src="${driver.photoUrl || '/images/default-user.png'}" />
                                        <h4 class="mb-3">${driver.fullName}</h4>
                                        <ul class="list-group list-group-flush">
                                            <li class="list-group-item"><strong>NIC:</strong> ${driver.nic}</li>
                                            <li class="list-group-item"><strong>License:</strong> ${driver.driverLicenseNumber}</li>
                                            <li class="list-group-item"><strong>Expiry Date:</strong> ${driver.licenseExpiryDate}</li>
                                            <li class="list-group-item"><strong>Status:</strong> ${driver.status}</li>
                                        </ul>
                                        <div class="mt-4">
                                            <a href="/Driver/Edit/${driver.driverID}" class="btn btn-warning fw-bold">Edit</a>
                                            <button type="button" class="btn btn-outline-danger fw-bold delete-btn" data-driver-id="${driver.driverID}">Delete</button>
                                        </div>
                                    </div>`;
                            });
                    }
                });
            });

            // ---------------- Delete Button ----------------
            document.addEventListener("click", function (e) {
                if (e.target && e.target.classList.contains("delete-btn")) {
                    const driverId = e.target.getAttribute("data-driver-id");
                    deleteForm.action = `/Driver/Delete/${driverId}`;
                    deleteModal.show();
                }
            });

            // ---------------- Search & Filter ----------------
            const searchBox = document.getElementById("searchBox");
            const statusFilter = document.getElementById("statusFilter");

            function filterDrivers() {
                const search = searchBox.value.toLowerCase();
                const statusVal = statusFilter.value;
                rows.forEach(row => {
                    const name = row.cells[1].innerText.toLowerCase();
                    const nic = row.cells[2].innerText.toLowerCase();
                    const status = row.cells[3].innerText.trim();
                    const matchSearch = name.includes(search) || nic.includes(search);
                    const matchStatus = !statusVal || status === statusVal;
                    row.style.display = (matchSearch && matchStatus) ? "" : "none";
                });
            }

            searchBox.addEventListener("keyup", filterDrivers);
            statusFilter.addEventListener("change", filterDrivers);
        });
    </script>
}