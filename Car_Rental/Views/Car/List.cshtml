@model IEnumerable<Car_Rental.Models.Entities.Car>

@{
    ViewData["Title"] = "All Cars";
}

@{
    Layout = "_AdminLayout"; // Ensure it uses the LoginLayout
}

<style>
    body {
        overflow: hidden;
    }

    .row-full {
        display: flex;
        height: calc(100vh - 90px);
        padding: 15px;
        gap: 15px;
        box-sizing: border-box;
    }

    .col-left {
        flex: 0 0 65%;
        display: flex;
        flex-direction: column;
        border: 1px solid #dee2e6;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 12px rgba(0,0,0,0.05);
    }

    .left-header,
    .left-stats,
    .left-filter {
        flex: 0 0 auto;
        padding: 15px;
        border-bottom: 1px solid #dee2e6;
    }

    .left-filter {
        border-bottom: none;
    }

    .table-container {
        flex: 1 1 auto;
        overflow-y: auto;
    }

        .table-container table {
            width: 100%;
            border-collapse: collapse;
        }

        .table-container thead {
            position: sticky;
            top: 0;
            background-color: #343a40;
            z-index: 10;
        }

    .car-row {
        cursor: pointer;
        transition: background-color 0.2s ease;
    }

        .car-row:hover {
            background-color: #f1f3f5;
        }

        .car-row.active {
            background-color: #d0ebff !important;
            font-weight: 500;
        }

    .car-thumb {
        width: 80px;
        height: 50px;
        object-fit: cover;
        border-radius: 6px;
    }

    .stats-boxes {
        display: flex;
        gap: 15px;
    }

    .stats-box {
        flex: 1;
        padding: 15px;
        border-radius: 12px;
        color: #fff;
        font-weight: 600;
        text-align: center;
        transition: transform 0.2s, box-shadow 0.2s;
    }

        .stats-box:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 15px rgba(0,0,0,0.1);
        }

    .stats-total {
        background-color: #0d6efd;
    }

    .stats-available {
        background-color: #198754;
    }

    .stats-booked {
        background-color: #dc3545;
    }

    .col-right {
        flex: 0 0 35%;
        padding: 25px;
        overflow-y: auto;
        background-color: #ffffff;
        border: 1px solid #dee2e6;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.05);
    }

    .details-content img {
        width: 100%;
        border-radius: 8px;
        margin-bottom: 20px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    }
</style>

<div class="row-full">
    <!-- Left -->
    <div class="col-left">
        <div class="left-header d-flex justify-content-between align-items-center">
            <h2 class="fw-bold text-primary mb-0">@ViewData["Title"]</h2>
            <a asp-action="Add" class="btn btn-primary fw-bold">
                <i class="bi bi-plus-circle me-1"></i> Add Car
            </a>
        </div>

        <div class="left-stats stats-boxes">
            <div class="stats-box stats-total" id="totalCarsBox">Total Cars: 0</div>
            <div class="stats-box stats-available" id="availableCarsBox">Available: 0</div>
            <div class="stats-box stats-booked" id="bookedCarsBox">Booked: 0</div>
        </div>

        <div class="left-filter row g-2 align-items-center">
            <div class="col-md-7">
                <input type="text" id="searchBox" class="form-control" placeholder="Search by Registration, Brand, Model..." />
            </div>
            <div class="col-md-5">
                <select id="statusFilter" class="form-select">
                    <option value="">All Status</option>
                    <option value="Available">Available</option>
                    <option value="Booked">Booked</option>
                    <option value="UnderMaintenance">Under Maintenance</option>
                    <option value="NotAvailable">Not Available</option>
                </select>
            </div>
        </div>

        <div class="table-container">
            <table class="table table-hover align-middle mb-0">
                <thead class="table-dark">
                    <tr>
                        <th class="ps-3">Car</th>
                        <th>Details</th>
                        <th>Status</th>
                        <th>Price/Day</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        foreach (var car in Model)
                        {
                            <tr class="car-row" data-car-id="@car.CarId" data-registration="@car.RegistrationNumber">
                                <td class="ps-3">
                                    <img src="@(string.IsNullOrEmpty(car.ImageUrl) ? "/images/default-car.png" : car.ImageUrl)" class="car-thumb" alt="@car.Brand" />
                                </td>
                                <td>
                                    <div class="fw-bold">@car.Brand @car.Model</div>
                                    <small class="text-muted">@car.RegistrationNumber | @car.Year</small>
                                </td>
                                <td>
                                    @switch (car.Status)
                                    {
                                        case Car_Rental.Enum.CarStatus.Available:
                                            <span class="badge bg-success">Available</span>
                                            ; break;
                                        case Car_Rental.Enum.CarStatus.Booked:
                                            <span class="badge bg-danger">Booked</span>
                                            ; break;
                                        case Car_Rental.Enum.CarStatus.UnderMaintenance:
                                            <span class="badge bg-warning text-dark">Maintenance</span>
                                            ; break;
                                        default:
                                            <span class="badge bg-secondary">Not Available</span>
                                            ; break;
                                    }
                                </td>
                                <td class="fw-bold">$@car.RentalPricePerDay</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4" class="text-center p-5 text-muted">No cars found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Right -->
    <div class="col-right" id="detailsPane">
        <div class="details-content text-center pt-5">
            <i class="bi bi-car-front" style="font-size: 5rem; color: #ccc;"></i>
            <h5 class="mt-3 text-muted">No Car Selected</h5>
            <p>Select a car from the list to view full details.</p>
        </div>
    </div>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">Are you sure you want to delete this car?</div>
            <div class="modal-footer">
                <form id="deleteForm" method="post">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Yes, Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const searchBox = document.getElementById("searchBox");
            const statusFilter = document.getElementById("statusFilter");
            const detailsPane = document.getElementById("detailsPane");
            const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            const deleteForm = document.getElementById('deleteForm');

            // Stats
            fetch("/Car/GetStats")
                .then(res => res.json())
                .then(stats => {
                    document.getElementById("totalCarsBox").innerText = `Total Cars: ${stats.total}`;
                    document.getElementById("availableCarsBox").innerText = `Available: ${stats.available}`;
                    document.getElementById("bookedCarsBox").innerText = `Booked: ${stats.booked}`;
                });

            // Car row click
            document.querySelectorAll(".car-row").forEach(row => {
                row.addEventListener("click", function () {
                    const carId = this.dataset.carId;
                    const isActive = this.classList.contains("active");
                    document.querySelectorAll(".car-row").forEach(r => r.classList.remove("active"));

                    if (isActive) {
                        detailsPane.innerHTML = `<div class="details-content text-center pt-5">
                            <i class="bi bi-car-front" style="font-size: 5rem; color: #ccc;"></i>
                            <h5 class="mt-3 text-muted">No Car Selected</h5>
                            <p>Select a car from the list to view full details.</p>
                        </div>`;
                    } else {
                        this.classList.add("active");

                        fetch(`/Car/GetCarDetails/${carId}`)
                            .then(res => res.json())
                            .then(car => {
                                // Determine which offer to show
                                let offerText = "No Offer";
                                if (car.offerPercentage && car.offerPercentage > 0) {
                                    offerText = car.offerPercentage+"%";
                                } else if (car.offerAmount && car.offerAmount > 0) {
                                    offerText = "$" + car.offerAmount;
                                }

                                detailsPane.innerHTML = `
                                    <div class="details-content">
                                        <img src="${car.imageUrl || '/images/default-car.png'}" alt="${car.brand}">
                                        <h4 class="mb-3">${car.brand} ${car.model} (${car.year})</h4>
                                        <ul class="list-group list-group-flush">
                                            <li class="list-group-item"><strong>Registration:</strong> ${car.registrationNumber}</li>
                                            <li class="list-group-item"><strong>Fuel Type:</strong> ${car.fuelType}</li>
                                            <li class="list-group-item"><strong>Transmission:</strong> ${car.transmission}</li>
                                            <li class="list-group-item"><strong>Status:</strong> ${car.status}</li>
                                            <li class="list-group-item"><strong>Price/Day:</strong> <span class="fw-bold fs-5 text-success">$${car.rentalPricePerDay}</span></li>
                                            <li class="list-group-item"><strong>Offer:</strong> ${offerText}</li>
                                        </ul>
                                        <div class="mt-4">
                                            <a href="/Car/Edit/${car.carId}" class="btn btn-warning fw-bold">Edit</a>
                                            <button type="button" class="btn btn-outline-danger fw-bold delete-btn" data-car-id="${car.carId}">Delete</button>
                                        </div>
                                    </div>`;
                            });
                    }
                });
            });

            // Delete click
            document.addEventListener("click", function (e) {
                if (e.target && e.target.classList.contains("delete-btn")) {
                    const carId = e.target.getAttribute("data-car-id");
                    deleteForm.action = `/Car/Delete/${carId}`;
                    deleteModal.show();
                }
            });

            // Filter
            function filterCars() {
                const search = searchBox.value.toLowerCase();
                const statusVal = statusFilter.value;

                document.querySelectorAll(".car-row").forEach(row => {
                    const carDetails = row.cells[1].innerText.toLowerCase();
                    const statusText = row.cells[2].innerText.trim();
                    const regNumber = row.dataset.registration.toLowerCase();

                    const matchSearch = carDetails.includes(search) || regNumber.includes(search);
                    const matchStatus = statusVal === "" || statusText.replace(/\s/g, '') === statusVal.replace(/\s/g, '');

                    row.style.display = (matchSearch && matchStatus) ? "" : "none";
                });
            }

            searchBox.addEventListener("keyup", filterCars);
            statusFilter.addEventListener("change", filterCars);
        });

    </script>
}
