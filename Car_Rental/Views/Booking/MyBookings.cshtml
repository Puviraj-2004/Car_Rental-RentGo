@model IEnumerable<Car_Rental.Models.Entities.Booking>
@{
    ViewData["Title"] = "My Bookings";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<style>
    .booking-card {
        border: 1px solid #dee2e6;
        border-radius: 0.5rem;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        margin-bottom: 1.5rem;
    }
    .booking-status {
        font-weight: 600;
        text-transform: uppercase;
        font-size: 0.875rem;
    }
    .status-pending { color: #ffc107; }
    .status-booked { color: #28a745; }
    .status-cancelled { color: #dc3545; }
    .status-completed { color: #6c757d; }
</style>

<div class="container mt-4">
    @if (User.Identity.IsAuthenticated)
    {
        <!-- Authenticated User - Show Their Bookings -->
        <div class="row">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h2><i class="fas fa-calendar-alt me-2"></i>My Bookings</h2>
                    <a href="/Guest/Cars" class="btn btn-primary">
                        <i class="fas fa-plus me-2"></i>New Booking
                    </a>
                </div>

                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show">
                        @TempData["SuccessMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }

                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show">
                        @TempData["ErrorMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }

                @if (Model != null && Model.Any())
                {
                    @foreach (var booking in Model)
                    {
                        <div class="booking-card">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-3">
                                        <img src="@(booking.Car?.ImageUrl ?? "/images/default-car.jpg")" 
                                             class="img-fluid rounded" alt="Car Image" style="max-height: 120px; object-fit: cover;">
                                    </div>
                                    <div class="col-md-6">
                                        <h5 class="card-title">@booking.Car?.Brand @booking.Car?.Model</h5>
                                        <p class="text-muted mb-1"><strong>Reference:</strong> @booking.BookingReference</p>
                                        <p class="text-muted mb-1"><strong>Pickup:</strong> @booking.PickupDate.ToString("dd MMM yyyy")</p>
                                        <p class="text-muted mb-1"><strong>Return:</strong> @booking.ReturnDate.ToString("dd MMM yyyy")</p>
                                        <p class="text-muted mb-1"><strong>Duration:</strong> @((booking.ReturnDate - booking.PickupDate).Days) days</p>
                                    </div>
                                    <div class="col-md-3 text-end">
                                        <span class="booking-status status-@booking.Status.ToString().ToLower()">
                                            @booking.Status
                                        </span>
                                        <h4 class="mt-2">$@booking.TotalPrice</h4>
                                        <div class="mt-3 d-grid gap-2">
                                            <a href="/Booking/FindBooking?bookingReference=@booking.BookingReference" 
                                               class="btn btn-outline-primary btn-sm">
                                                <i class="fas fa-eye me-1"></i>View Details
                                            </a>
                                            @if (booking.Status == Car_Rental.Enum.BookingStatus.pending || booking.Status == Car_Rental.Enum.BookingStatus.Booked)
                                            {
                                                var currentTime = DateTime.Now;
                                                var cutoffTime = currentTime.AddHours(24);
                                                var canCancel = booking.PickupDate > cutoffTime;
                                                
                                                if (canCancel)
                                                {
                                                    <button type="button" class="btn btn-danger btn-sm" 
                                                            onclick="cancelBooking('@booking.BookingID', '@booking.BookingReference', event)">
                                                        <i class="fas fa-times me-1"></i>Cancel Booking
                                                    </button>
                                                }
                                                else
                                                {
                                                    <small class="text-muted">
                                                        <i class="fas fa-info-circle me-1"></i>Cannot cancel (less than 24h to pickup)
                                                    </small>
                                                }
                                            }
                                            @if (booking.Status == Car_Rental.Enum.BookingStatus.Completed)
                                            {
                                                <button type="button" class="btn btn-warning btn-sm" 
                                                        onclick="showReviewModal(@booking.BookingID, @booking.CarID, '@booking.Car?.Brand @booking.Car?.Model')">
                                                    <i class="fas fa-star me-1"></i>Rate & Review
                                                </button>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-5">
                        <i class="fas fa-calendar-times fa-3x text-muted mb-3"></i>
                        <h4>No Bookings Found</h4>
                        <p class="text-muted">You haven't made any bookings yet.</p>
                        <a href="/Guest/Cars" class="btn btn-primary">
                            <i class="fas fa-car me-2"></i>Browse Cars
                        </a>
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <!-- Guest User - Search by Reference -->
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header bg-dark text-white">
                        <h4><i class="fas fa-search me-2"></i>Find My Booking</h4>
                    </div>
                    <div class="card-body">
                        @if (TempData["ErrorMessage"] != null)
                        {
                            <div class="alert alert-danger">
                                @TempData["ErrorMessage"]
                            </div>
                        }

                        <p class="text-muted">Enter your booking reference code to view and manage your reservation.</p>

                        <form asp-controller="Booking" asp-action="FindBooking" method="post">
                            @Html.AntiForgeryToken()
                            
                            <div class="mb-3">
                                <label class="form-label">Booking Reference Code</label>
                                <input type="text" name="bookingReference" class="form-control form-control-lg text-center" 
                                       placeholder="RG20231021123456789" required style="letter-spacing: 2px; font-family: monospace;">
                                <div class="form-text">
                                    Your booking reference starts with "RG" followed by numbers (e.g., RG20231021123456789)
                                </div>
                            </div>

                            <div class="text-center">
                                <button type="submit" class="btn btn-dark btn-lg">
                                    <i class="fas fa-search me-2"></i>Find My Booking
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (!User.Identity.IsAuthenticated)
    {
        <!-- Help Section for Guests -->
        <div class="row justify-content-center mt-4">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5><i class="fas fa-question-circle me-2"></i>Need Help?</h5>
                    </div>
                    <div class="card-body">
                        <h6>Where can I find my booking reference?</h6>
                        <ul class="small">
                            <li>In your booking confirmation email</li>
                            <li>On your payment receipt</li>
                            <li>In your SMS confirmation message</li>
                        </ul>

                        <h6 class="mt-3">What can I do with my booking?</h6>
                        <ul class="small">
                            <li><i class="fas fa-eye text-info"></i> View booking details</li>
                            <li><i class="fas fa-calendar-plus text-success"></i> Extend rental period</li>
                            <li><i class="fas fa-times-circle text-danger"></i> Cancel booking (24h+ before pickup)</li>
                            <li><i class="fas fa-print text-secondary"></i> Print confirmation</li>
                        </ul>

                        <div class="text-center mt-3">
                            <p class="small text-muted">
                                <i class="fas fa-phone"></i> Need assistance? Call us at +94 75 290 4256</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@Html.AntiForgeryToken()

<!-- Review Modal -->
<div class="modal fade" id="reviewModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Rate & Review</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="reviewForm" method="post" action="/Review/SubmitReview">
                <div class="modal-body">
                    <input type="hidden" id="reviewBookingId" name="bookingId" />
                    <input type="hidden" id="reviewCarId" name="carId" />
                    
                    <div class="mb-3">
                        <h6 id="carName"></h6>
                        <p class="text-muted">How was your experience with this car?</p>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label">Rating *</label>
                        <div class="rating-stars">
                            <i class="fas fa-star" data-rating="1"></i>
                            <i class="fas fa-star" data-rating="2"></i>
                            <i class="fas fa-star" data-rating="3"></i>
                            <i class="fas fa-star" data-rating="4"></i>
                            <i class="fas fa-star" data-rating="5"></i>
                        </div>
                        <input type="hidden" id="rating" name="rating" required />
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label">Comment (Optional)</label>
                        <textarea name="comment" class="form-control" rows="4" 
                                  placeholder="Share your experience with other customers..."></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-warning">Submit Review</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const input = document.querySelector('input[name="bookingReference"]');
            if (input) {
                // Auto-uppercase and format input
                input.addEventListener('input', function(e) {
                    let value = e.target.value.toUpperCase();
                    e.target.value = value;
                });

                // Focus on input when page loads
                input.focus();
            }
        });

        function cancelBooking(bookingId, bookingReference, event) {
            if (confirm('Are you sure you want to cancel this booking? This action cannot be undone.')) {
                const formData = new FormData();
                formData.append('bookingId', bookingId);
                formData.append('bookingReference', bookingReference);
                formData.append('reason', 'User requested cancellation');
                formData.append('__RequestVerificationToken', document.querySelector('input[name="__RequestVerificationToken"]').value);

                // Show loading state
                const button = event.target;
                const originalText = button.innerHTML;
                button.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Cancelling...';
                button.disabled = true;

                fetch('/Booking/CancelBooking', {
                    method: 'POST',
                    body: formData
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        alert(data.message);
                        location.reload(); // Refresh the page to show updated status
                    } else {
                        alert('Error: ' + data.message);
                        // Restore button state
                        button.innerHTML = originalText;
                        button.disabled = false;
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Failed to cancel booking. Please try again.');
                    // Restore button state
                    button.innerHTML = originalText;
                    button.disabled = false;
                });
            }
        }

        function showReviewModal(bookingId, carId, carName) {
            document.getElementById('reviewBookingId').value = bookingId;
            document.getElementById('reviewCarId').value = carId;
            document.getElementById('carName').textContent = carName;
            
            // Reset rating
            document.querySelectorAll('.rating-stars i').forEach(star => {
                star.classList.remove('text-warning');
                star.classList.add('text-muted');
            });
            document.getElementById('rating').value = '';
            
            // Show modal
            const modal = new bootstrap.Modal(document.getElementById('reviewModal'));
            modal.show();
        }

        // Rating stars functionality
        document.addEventListener('DOMContentLoaded', function() {
            const stars = document.querySelectorAll('.rating-stars i');
            
            stars.forEach(star => {
                star.addEventListener('click', function() {
                    const rating = parseInt(this.getAttribute('data-rating'));
                    document.getElementById('rating').value = rating;
                    
                    // Update star display
                    stars.forEach((s, index) => {
                        if (index < rating) {
                            s.classList.remove('text-muted');
                            s.classList.add('text-warning');
                        } else {
                            s.classList.remove('text-warning');
                            s.classList.add('text-muted');
                        }
                    });
                });
                
                star.addEventListener('mouseover', function() {
                    const rating = parseInt(this.getAttribute('data-rating'));
                    stars.forEach((s, index) => {
                        if (index < rating) {
                            s.classList.add('text-warning');
                        }
                    });
                });
                
                star.addEventListener('mouseout', function() {
                    const currentRating = parseInt(document.getElementById('rating').value) || 0;
                    stars.forEach((s, index) => {
                        if (index >= currentRating) {
                            s.classList.remove('text-warning');
                            s.classList.add('text-muted');
                        }
                    });
                });
            });
        });
    </script>
    
    <style>
        .rating-stars i {
            font-size: 1.5rem;
            cursor: pointer;
            margin-right: 0.25rem;
            transition: color 0.2s;
        }
        .rating-stars i.text-muted {
            color: #dee2e6 !important;
        }
        .rating-stars i.text-warning {
            color: #ffc107 !important;
        }
    </style>
}
